<!DOCTYPE html>
<html lang="ko">
  <head>
    <%include ./head%>
  </head>
  <body>
    <div>
      <h1>Welcome to MarketCooly</h1>
      <h2><%=title1%></h2>
      <form action="/join" method="POST">
        아이디*
        <input
          type="text"
          placeholder="6자 이상의 영문 혹은 영문과 숫자를 조합"
          required
        /><input type="button" id="confirmId" value="아이디 중복확인" /><br />
        <p>6자 이상의 영문 혹은 영문과 숫자를 조합<br /></p>
        비밀번호*
        <input
          type="password"
          id="password"
          placeholder="비밀번호를 입력해주세요"
          required
        /><br />
        비밀번호확인*
        <input
          type="password"
          id="password2"
          placeholder="비밀번호를 한번 더 입력해주세요"
          required
        /><br />
        이름*
        <input
          type="text"
          id="name"
          placeholder="고객님의 이름을 입력해주세요"
          required
        /><br />
        이메일*
        <input
          type="email"
          id="email"
          placeholder="예: cooly@marketcooly.shop"
          required
        />
        <input type="button" id="confirmEmail" value="이메일 중복확인" /><br />
        휴대폰*
        <input type="text" placeholder="숫자만 입력해주세요" required /><br />
        배송 주소
        <input type="text" id="sample4_postcode" placeholder="우편번호" />
        <input
          type="button"
          onclick="sample4_execDaumPostcode()"
          value="우편번호 찾기"
        /><br />
        <input type="text" id="sample4_roadAddress" placeholder="도로명주소" />
        <span id="guide" style="color:#999;display:none"></span>
        <input type="text" id="sample4_detailAddress" placeholder="상세주소" />

        <br /><input
          type="text"
          id="sample4_jibunAddress"
          placeholder="지번주소"
        />

        <script src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
        <script>
          //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.
          function sample4_execDaumPostcode() {
            new daum.Postcode({
              oncomplete: function(data) {
                // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
                // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                var roadAddr = data.roadAddress; // 도로명 주소 변수
                var extraRoadAddr = ""; // 참고 항목 변수

                // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
                  extraRoadAddr += data.bname;
                }
                // 건물명이 있고, 공동주택일 경우 추가한다.
                if (data.buildingName !== "" && data.apartment === "Y") {
                  extraRoadAddr +=
                    extraRoadAddr !== ""
                      ? ", " + data.buildingName
                      : data.buildingName;
                }
                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                if (extraRoadAddr !== "") {
                  extraRoadAddr = " (" + extraRoadAddr + ")";
                }

                // 우편번호와 주소 정보를 해당 필드에 넣는다.
                document.getElementById("sample4_postcode").value =
                  data.zonecode;
                document.getElementById("sample4_roadAddress").value = roadAddr;
                document.getElementById("sample4_jibunAddress").value =
                  data.jibunAddress;

                var guideTextBox = document.getElementById("guide");
                // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
                if (data.autoRoadAddress) {
                  var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
                  guideTextBox.innerHTML =
                    "(예상 도로명 주소 : " + expRoadAddr + ")";
                  guideTextBox.style.display = "block";
                } else if (data.autoJibunAddress) {
                  var expJibunAddr = data.autoJibunAddress;
                  guideTextBox.innerHTML =
                    "(예상 지번 주소 : " + expJibunAddr + ")";
                  guideTextBox.style.display = "block";
                } else {
                  guideTextBox.innerHTML = "";
                  guideTextBox.style.display = "none";
                }
              }
            }).open();
          }
        </script>

        <br />
        성별
        <input type="radio" name="sexchk" />남자
        <input type="radio" name="sexchk" />여자
        <input type="radio" name="sexchk" />선택안함 <br />
        생년월일<input type="text" placeholder="YYYY" />
        <input type="text" placeholder="MM" />
        <input type="text" placeholder="DD" /><br />
        <div>
          <h5>이용약관동의*</h5>
          <p>
            선택항목에 동의하지 않은 경우도 회원가입 및 일반적인 서비스를 이용할
            수 있습니다.
          </p>
          <input type="checkbox" id="checkAll" /> 전체동의 <br />
          <input type="checkbox" name="chk" required /> 이용약관 (필수)
          <a>약관보기 ></a><br />
          <input type="checkbox" name="chk" required /> 개인정보처리방침 (필수)
          <a>약관보기 ></a><br />
          <input type="checkbox" name="chk" /> 개인정보처리방침 (선택)
          <a>약관보기 ></a><br />
          <input type="checkbox" id="checkAll2" name="chk" />
          무료배송, 할인쿠폰 등 혜택/정보 수신(선택)<br />
          <input type="checkbox" name="chk" class="chk2" /> SMS
          <input type="checkbox" name="chk" class="chk2" /> 이메일 <br />
          <input type="checkbox" name="chk" required /> 본인은 만 14세
          이상입니다.(필수)
          <br />
        </div>
        <div>
          <button type="submit">가입하기</button>
        </div>
      </form>
    </div>
  </body>
  <script>
    $(document).ready(function() {
      event.preventDefault();
      $("#formTerm").submit(function() {
        if ($("input[name=chk1]").prop("checked")) {
          $("formTerm").submit(function() {
            return true;
          });
        } else {
          alert("약관의 체크가 필요합니다.");
          location.href = "/join";
          return false;
        }
      });

      //박스 전체 클릭 기능
      $("#checkAll").click(function() {
        if ($("#checkAll").prop("checked")) {
          //checkAll 클릭이 되었으면
          //input태그의 class가 chk인 태그들을 찾아서 checked옵션을 true로 정의
          $("input[name=chk]").prop("checked", true);
        } else {
          //checkAll 클릭이 안되었으면
          //input태그의 class가 chk인 태그들을 찾아서 checked옵션을 false로 정의
          $("input[name=chk]").prop("checked", false);
        }
      });

      $("#checkAll2").click(function() {
        if ($("#checkAll2").prop("checked")) {
          //checkAll 클릭이 되었으면
          //input태그의 class가 chk인 태그들을 찾아서 checked옵션을 true로 정의
          $("input[class=chk2]").prop("checked", true);
        } else {
          //checkAll 클릭이 안되었으면
          //input태그의 class가 chk인 태그들을 찾아서 checked옵션을 false로 정의
          $("input[class=chk2]").prop("checked", false);
        }
      });
    });
  </script>
</html>
